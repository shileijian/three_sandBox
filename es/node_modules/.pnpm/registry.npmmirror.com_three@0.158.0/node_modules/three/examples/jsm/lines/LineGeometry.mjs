import { LineSegmentsGeometry as n } from "./LineSegmentsGeometry.mjs";
class h extends n {
  constructor() {
    super(), this.isLineGeometry = !0, this.type = "LineGeometry";
  }
  setPositions(e) {
    const o = e.length - 3, s = new Float32Array(2 * o);
    for (let t = 0; t < o; t += 3)
      s[2 * t] = e[t], s[2 * t + 1] = e[t + 1], s[2 * t + 2] = e[t + 2], s[2 * t + 3] = e[t + 3], s[2 * t + 4] = e[t + 4], s[2 * t + 5] = e[t + 5];
    return super.setPositions(s), this;
  }
  setColors(e) {
    const o = e.length - 3, s = new Float32Array(2 * o);
    for (let t = 0; t < o; t += 3)
      s[2 * t] = e[t], s[2 * t + 1] = e[t + 1], s[2 * t + 2] = e[t + 2], s[2 * t + 3] = e[t + 3], s[2 * t + 4] = e[t + 4], s[2 * t + 5] = e[t + 5];
    return super.setColors(s), this;
  }
  fromLine(e) {
    const o = e.geometry;
    return this.setPositions(o.attributes.position.array), this;
  }
}
export {
  h as LineGeometry
};
